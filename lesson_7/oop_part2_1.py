# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()),
# который должен принимать данные (список списков) для формирования матрицы.
#
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: см. в методичке.
# Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов класса Matrix (двух матриц).

# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы
# складываем с первым элементом первой строки второй матрицы и т.д.
from random import randint


class Matrix:
    my_list: list

    def __init__(self, my_list):
        self.my_list = my_list  # инициация списка списков в конструкторе

    def __str__(self):  # для вывода матрицы в привычном виде
        for row in self.my_list:
            for i in row:
                print(f"{i:4}", end="")
            print()

    def __add__(self, other):  # суммирование матриц
        for el in range(len(self.my_list)):
            for i in range(len(other.my_list[el])):
                self.my_list[el][i] = self.my_list[el][i] + other.my_list[el][i]
        return Matrix.__str__(self)


n = 4  # размерность матрицы
m = 4
a = [[randint(-5, 5) for j in range(m)] for i in range(n)]  # заполнение случайными числами
print(f'матрица 1 {a}')
b = [[randint(-5, 5) for s in range(m)] for v in range(n)]
print(f'матрица 2 {b}')

m = Matrix(a)
new_m = Matrix(b)
print("сумма двух матриц")
m + new_m
